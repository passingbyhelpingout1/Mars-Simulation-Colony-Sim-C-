name: build
on: [push, pull_request]

jobs:
  build:
    name: Build & test (${{ matrix.os }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Ensure MSVC environment is initialized on Windows
      - name: Set up MSVC (Windows)
        if: runner.os == 'Windows'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: x64

      - name: Configure (CMake)
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release

      - name: Build
        run: cmake --build build --config Release --parallel 2

      - name: Smoke test (ctest)
        working-directory: build
        run: ctest -C Release --output-on-failure

      # Optional: publish whatever binary(s) the project produced.
      # These steps won't fail the job if nothing matches.
      - name: Upload artifact (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}
          path: |
            build/Release/*.exe
            build/*.exe
          if-no-files-found: ignore

      - name: Upload artifact (Unix)
        if: runner.os != 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ runner.os }}
          path: |
            build/mars
            build/*/mars
            build/*.out
          if-no-files-found: ignore
       
      - name: Determinism smoke test
  run: |
    if [ "${{ runner.os }}" = "Windows" ]; then
      .\build\Release\mars.exe --ticks 10000 --hash-only > out.txt
      type out.txt
      set /p EXPECTED=< tests\expected_hash.txt
      for /f %%i in (out.txt) do set ACTUAL=%%i
      if not "%ACTUAL%"=="%EXPECTED%" ( exit /b 1 )
    else
      ./build/mars --ticks 10000 --hash-only > out.txt
      cat out.txt
      diff -u out.txt tests/expected_hash.txt
    fi  
